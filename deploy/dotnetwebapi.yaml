kind: Service
apiVersion: v1
metadata:
  name: video-indexer
  labels:
    app: dotnetwebapi
spec:
  selector:
    app: dotnetwebapi
  ports:
    - name: webapi
      protocol: TCP
      port: 80
      targetPort: 80
    - name: dapr-eventgrid
      protocol: TCP
      port: 9000
      targetPort: 9000
  type: ClusterIP

---
  apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: eventgrid-input-rule
    namespace: default
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt
  spec:
    tls:
      - hosts:
        - dapr-k8s.dev.msdevopsdude.com
        secretName: dapr-k8s-tls
    rules:
      - host: dapr-k8s.dev.msdevopsdude.com
        http:
          paths:
            - path: /api/events
              backend:
                serviceName: video-indexer
                servicePort: 9000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-indexer
  labels:
    app: dotnetwebapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnetwebapi
  template:
    metadata:
      labels:
        app: dotnetwebapi
      annotations:
        dapr.io/enabled: "true"
        dapr.io/id: "video-indexer"
        dapr.io/port: "5000"
        dapr.io/log-level: "debug"
    spec:
      containers:
      - name: webapi
        image: masahigo/video-indexer:latest
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: AZURE_TENANT_ID
          value: "secret-tenant-id@azurekeyvault"
        - name: AZURE_CLIENT_ID
          value: "secret-client-id@azurekeyvault"
        - name: AZURE_CLIENT_SECRET
          value: "secret-client-secret@azurekeyvault"
        - name: VIDEO_INDEXER_API_KEY
          value: "secret-video-indexer-api-key@azurekeyvault"
        - name: AZURE_STORAGE_ACCOUNT_NAME
          value: "secret-storage-account-name@azurekeyvault"
        ports:
        - containerPort: 5000
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 15